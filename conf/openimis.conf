upstream docker-frontend {
        server frontend:5000;
}
upstream docker-backend {
        server backend:8000;
}
server {
        listen 80 default_server;
        server_name _;
        return 301 https://$host$request_uri;
}
server {
        listen       443 ssl;
        server_name NEW_OPENIMIS_HOST;

        ssl_certificate /etc/ssl/certs/localhost.crt;
        ssl_certificate_key /etc/ssl/private/localhost.key;

        location ~ ^/$ {
                return 301 /front;
        }
        location / {
                proxy_pass https://LEGACY_OPENIMIS_HOST;
                proxy_set_header   Host LEGACY_OPENIMIS_HOST;
                proxy_set_header   X-Real-IP $remote_addr;
                proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header   X-Forwarded-Host $server_name;
        }

        location /front {
                proxy_pass http://docker-frontend/;
                proxy_set_header   Host $host;
                proxy_set_header   X-Real-IP $remote_addr;
                proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header   X-Forwarded-Host $server_name;
        }
        location /api/ {
                auth_basic "Restricted";
                auth_basic_user_file /etc/nginx/.htpasswd;
                proxy_pass http://docker-backend/api/;
                proxy_set_header   Host $host;
                proxy_set_header   X-Real-IP $remote_addr;
                proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header   X-Forwarded-Host $server_name;
                proxy_set_header   remote-user $remote_user;
        }
}